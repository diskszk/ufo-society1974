openapi: 3.0.0
paths:
  /users:
    get:
      operationId: UsersController_findAllUser
      parameters:
        - name: email
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ユーザーを全件取得する
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: ''
      tags: &ref_0
        - /users
    post:
      operationId: UsersController_createUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDTO'
      responses:
        '201':
          description: ユーザーを新規登録する。
      tags: *ref_0
  /users/{userId}:
    get:
      operationId: UsersController_findUserById
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ユーザーIDと一致するユーザーを1件取得する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: IDと一致するユーザーは存在しません。
      tags: *ref_0
    put:
      operationId: UsersController_updateUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDTO'
      responses:
        '204':
          description: ユーザーの情報を変更する。
        '404':
          description: IDと一致するユーザーは存在しません。
      tags: *ref_0
      security:
        - bearer: []
    delete:
      operationId: UsersController_deleteUser
      parameters:
        - name: userId
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: IDと一致するユーザーは管理者のため削除できません。
        '404':
          description: IDと一致するユーザーは存在しません。
      tags: *ref_0
  /draft-albums:
    get:
      operationId: DraftAlbumsController_findAllDraftAlbums
      parameters: []
      responses:
        '200':
          description: 下書き中のアルバムを全件取得する。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
      tags: &ref_1
        - /draft-albums
    post:
      operationId: DraftAlbumsController_createDraftAlbum
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDTO'
      responses:
        '201':
          description: 下書き中のアルバムを新規作成する。
      tags: *ref_1
  /draft-albums/{albumId}:
    get:
      operationId: DraftAlbumsController_findDraftAlbumById
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: IDと一致する下書き中のアルバムを1件取得する。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '404':
          description: IDと一致するアルバムは存在しません。
      tags: *ref_1
    put:
      operationId: DraftAlbumsController_updateDraftAlbum
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDTO'
      responses:
        '204':
          description: IDと一致する下書き中のアルバムを更新する。
        '404':
          description: IDと一致するアルバムは存在しません。
      tags: *ref_1
    delete:
      operationId: DraftAlbumsController_deleteDraftAlbum
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: IDと一致する下書き中のアルバムを削除する。
        '404':
          description: IDと一致するアルバムは存在しません。
      tags: *ref_1
  /draft-albums/{albumId}/publish:
    post:
      operationId: DraftAlbumsController_publishDraftAlbum
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: IDと一致する下書き中のアルバムを公開中に変更する。
        '404':
          description: IDと一致するアルバムは存在しません。
      tags: *ref_1
  /albums:
    get:
      operationId: PublishedAlbumsController_findAllPublishedAlbums
      parameters: []
      responses:
        '200':
          description: 公開中のアルバムを全件取得する。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
      tags: &ref_2
        - /albums
  /albums/{albumId}:
    get:
      operationId: PublishedAlbumsController_findPublishedAlbumById
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: IDと一致する公開中のアルバムを1件取得する。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '404':
          description: IDと一致するアルバムは存在しません。
      tags: *ref_2
    put:
      operationId: PublishedAlbumsController_updatePublishedAlbum
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDTO'
      responses:
        '204':
          description: IDと一致する公開中のアルバムを変更する。
        '404':
          description: IDと一致するアルバムは存在しません。
      tags: *ref_2
  /albums/{albumId}/unpublish:
    post:
      operationId: PublishedAlbumsController_unpublishAlbum
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: IDと一致する公開中のアルバムを下書き中に変更する。
        '404':
          description: IDと一致するアルバムは存在しません。
      tags: *ref_2
  /albums/{albumId}/songs:
    post:
      operationId: SongsController_createSong
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSongDTO'
      responses:
        '201':
          description: 楽曲を新規作成する。
      tags: &ref_3
        - /albums/:albumId/songs
  /albums/{albumId}/songs/{songId}:
    get:
      operationId: SongsController_getSongById
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
        - name: songId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: IDと一致する楽曲を1件取得する
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
        '404':
          description: IDと一致する楽曲は存在しません。
      tags: *ref_3
    delete:
      operationId: SongsController_deleteSong
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
        - name: songId
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
        '404':
          description: IDと一致する楽曲は存在しません。
      tags: *ref_3
    put:
      operationId: SongsController_updateSong
      parameters:
        - name: albumId
          required: true
          in: path
          schema:
            type: string
        - name: songId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSongDTO'
      responses:
        '204':
          description: ''
        '404':
          description: IDと一致する楽曲は存在しません。
      tags: *ref_3
  /access/count:
    get:
      operationId: AccessCountController_fetchAccessCount
      parameters: []
      responses:
        '200':
          description: 現在のアクセス数を取得する。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessCountResponse'
      tags: &ref_4
        - /access/count
  /access/count/increment:
    put:
      operationId: AccessCountController_incrementAccessCount
      parameters: []
      responses:
        '204':
          description: 現在のアクセス数をインクリメントする。
      tags: *ref_4
info:
  title: ufo-society-1974 API
  description: The API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  schemas:
    User:
      type: object
      properties:
        uid:
          type: string
        email:
          type: string
        role:
          type: string
        username:
          type: string
        isDeleted:
          type: boolean
      required:
        - uid
        - email
        - role
        - username
        - isDeleted
    CreateUserDTO:
      type: object
      properties:
        uid:
          type: string
        email:
          type: string
        role:
          type: string
        username:
          type: string
        isDeleted:
          type: boolean
      required:
        - uid
        - email
        - role
        - username
        - isDeleted
    UpdateUserDTO:
      type: object
      properties:
        uid:
          type: string
        email:
          type: string
        role:
          type: string
        username:
          type: string
        isDeleted:
          type: boolean
      required:
        - uid
        - email
        - role
        - username
        - isDeleted
    Album:
      type: object
      properties:
        id:
          type: string
        image:
          type: string
        publishedDate:
          type: string
        title:
          type: string
        published:
          type: boolean
      required:
        - id
        - image
        - publishedDate
        - title
        - published
    CreateAlbumDTO:
      type: object
      properties:
        image:
          type: string
        publishedDate:
          type: string
        title:
          type: string
      required:
        - image
        - publishedDate
        - title
    UpdateAlbumDTO:
      type: object
      properties:
        id:
          type: string
        image:
          type: string
        publishedDate:
          type: string
        title:
          type: string
      required:
        - id
        - image
        - publishedDate
        - title
    CreateSongDTO:
      type: object
      properties:
        lyric:
          type: string
        title:
          type: string
        wordsRights:
          type: string
        musicRights:
          type: string
      required:
        - lyric
        - title
        - wordsRights
        - musicRights
    Song:
      type: object
      properties:
        id:
          type: string
        lyric:
          type: string
        title:
          type: string
        wordsRights:
          type: string
        musicRights:
          type: string
      required:
        - id
        - lyric
        - title
        - wordsRights
        - musicRights
    UpdateSongDTO:
      type: object
      properties:
        id:
          type: string
        lyric:
          type: string
        title:
          type: string
        wordsRights:
          type: string
        musicRights:
          type: string
      required:
        - id
        - lyric
        - title
        - wordsRights
        - musicRights
    AccessCountResponse:
      type: object
      properties:
        accessCount:
          type: number
      required:
        - accessCount
